{"version":3,"sources":["assets/back-arrow.svg","components/Header.js","assets/loading.svg","components/MovieSelection.js","components/ReceiptPage.js","components/Footer.js","components/Seat.js","components/SeatSelection.js","components/SectionSelection.js","components/App.js","index.js"],"names":["Header","navigate","useNavigate","window","location","pathname","className","onClick","src","backArrow","alt","MovieSelection","useState","movies","setMovies","useEffect","axios","get","then","response","data","length","loading","map","movie","to","id","posterURL","title","ReceiptPage","confirmSend","movieSection","setMovieSection","sectionId","sectionID","undefined","cpf","replace","day","date","name","ids","seat","Footer","weekday","time","Seat","classSeat","handle","isSelected","setSelected","idSelectedSeat","alert","SeatSelection","idSection","useParams","sectionDetails","setSectionDetails","reserveSeats","setReserveSeats","nome","setNome","setCpf","handleSeat","idSeat","addArray","filter","idSeatCurrent","isFilled","seats","isAvailable","type","placeholder","onChange","e","target","value","Button","post","styled","button","SectionSelection","setMovie","idMovie","days","section","showtimes","App","movieDetails","setMovieDetails","path","element","currentDetails","details","index","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.e20295af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/back-arrow.f02d7d5f.svg\";","import { useNavigate } from \"react-router-dom\";\nimport backArrow from \"../assets/back-arrow.svg\";\n\nexport default function Header() {\n    const navigate = useNavigate();\n\n    function Navigate() {\n        navigate(-1);\n    }\n\n    return (\n        <>\n            {window.location.pathname !== \"/\"\n                ?\n                <header className=\"header\">\n                    <p>CINEFLEX</p>\n                    <img onClick={Navigate} src={backArrow} alt=\"back-arrow\" />\n                </header>\n                :\n                <header className=\"header\">\n                    <p>CINEFLEX</p>\n                </header>\n            }\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/loading.f4af70e5.svg\";","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport loading from \"../assets/loading.svg\";\n\nexport default function MovieSelection() {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        const promise = axios.get(\"https://mock-api.driven.com.br/api/v4/cineflex/movies\");\n\n        promise.then(response => {\n            setMovies(response.data);\n        });\n    }, [])\n\n    if (movies.length === 0) {\n        return (\n            <>\n                <img src={loading} />\n                <h1>Carregando...</h1>\n            </>\n        );\n    }\n\n    return (\n        <main className=\"movie-selection-page\">\n            <div className=\"title-page\">\n                <span className=\"title\">Selecione o filme</span>\n            </div>\n            <div className=\"content\">\n                {movies.map(movie => (\n                    <Link to={`/sections/${movie.id}`}>\n                        <div className=\"container\">\n                            <img src={movie.posterURL} alt={movie.title} />\n                        </div>\n                    </Link>\n                ))}\n            </div>\n        </main>\n    )\n}\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport loading from \"../assets/loading.svg\";\n\nexport default function ReceiptPage({ confirmSend }) {\n\n    const [movieSection, setMovieSection] = useState();\n\n    useEffect(() => {\n        const promise = axios.get(`https://mock-api.driven.com.br/api/v4/cineflex/showtimes/${confirmSend.sectionId}/seats`);\n\n        promise.then(response => {\n            setMovieSection(response.data);\n        });\n    }, [confirmSend.sectionID]);\n\n    if (movieSection === undefined) {\n        return (\n            <>\n                <img src={loading} />\n                <h1>Carregando...</h1>\n            </>\n        );\n    }\n\n    confirmSend.cpf = confirmSend.cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, \"$1.$2.$3-$4\");\n\n    return (\n        <main className=\"receipt-page\">\n            <div className=\"title-page\">\n                <span className=\"title\">Pedido feito<br />com sucesso!</span>\n            </div>\n            <div className=\"content\">\n                <div className=\"movie-session\">\n                    <div className=\"title\">\n                        Filme e sessão\n                    </div>\n                    <div className=\"data\">\n                        {movieSection.movie.title}\n                    </div>\n                    <div className=\"data\">\n                        {movieSection.day.date} {movieSection.name}\n                    </div>\n                </div>\n                <div className=\"tickets\">\n                    <div className=\"title\">\n                        Ingressos\n                    </div>\n                    {confirmSend.ids.map(seat => (\n                        <div className=\"data\">\n                            Assento {seat % 50 === 0 ? \"50\" : seat % 50}\n                        </div>\n                    ))}\n                </div>\n                <div className=\"buyer\">\n                    <div className=\"title\">\n                        Comprador\n                    </div>\n                    <div className=\"data\">\n                        Nome: {confirmSend.name}\n                    </div>\n                    <div className=\"data\">\n                        CPF: {confirmSend.cpf}\n                    </div>\n                </div>\n            </div>\n            <Link to=\"/\">\n                <div className=\"home-button\">\n                    <button>Voltar para Home</button>\n                </div>\n            </Link>\n\n        </main>\n    );\n}\n","export default function Footer({ src, alt, title, weekday, time }) {\n    return (\n        <div className=\"choosenMovie\">\n            <div className=\"container\">\n                <img src={src} alt={alt} />\n            </div>\n            <div className=\"choosenMovieData\">\n                <span className=\"choosenMovieName\">\n                    {title}\n                </span>\n                {weekday !== undefined &&\n                    <span className=\"choosenMovieTime\">\n                        {weekday} - {time}\n                    </span>\n                }\n            </div>\n        </div>\n    );\n\n}","import { useState } from \"react\";\n\nexport default function Seat({ classSeat, name, id, handle }) {\n    const [isSelected, setSelected] = useState(classSeat);\n\n    function choosenSeat(selectedSeat, idSelectedSeat) {\n        if (selectedSeat === 'circle available') {\n            if (idSelectedSeat === 'circle selected') {\n                handle(id, false);\n                setSelected('circle available');\n            } else {\n                handle(id, true);\n                setSelected('circle selected');\n            }\n        } else {\n            alert('Esse assento não está disponível!')\n        }\n    }\n\n    return (\n        <div className={isSelected} onClick={() => choosenSeat(classSeat, isSelected)}>\n            {name}\n        </div>\n    );\n}","import axios from \"axios\";\nimport Footer from \"./Footer\";\nimport Seat from \"./Seat\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport loading from \"../assets/loading.svg\";\nimport styled from \"styled-components\";\n\n\nexport default function SeatSelection({ confirmSend }) {\n\n    const { idSection } = useParams();\n    const [sectionDetails, setSectionDetails] = useState();\n    const [reserveSeats, setReserveSeats] = useState({ ids: [] });\n\n    const [nome, setNome] = useState(\"\");\n    const [cpf, setCpf] = useState(\"\");\n\n    useEffect(() => {\n        const promise = axios.get(`https://mock-api.driven.com.br/api/v4/cineflex/showtimes/${idSection}/seats`);\n\n        promise.then(response => {\n            setSectionDetails(response.data);\n        })\n    }, [idSection]);\n\n\n    if (sectionDetails === undefined) {\n        return (\n            <>\n                <img src={loading} />\n                <h1>Carregando...</h1>\n            </>\n        );\n    }\n\n    const { movie, day, name } = sectionDetails;\n\n    function handleSeat(idSeat, addArray) {\n        if (addArray) {\n            setReserveSeats({ ids: [...reserveSeats.ids, idSeat] });\n        } else {\n            setReserveSeats({\n                ids: reserveSeats.ids.filter((idSeatCurrent) => {\n                    return idSeatCurrent !== idSeat;\n                })\n            })\n        }\n    }\n\n    function handleName(e) {\n        setNome(e.target.value);\n\n        setReserveSeats({\n            ...reserveSeats,\n            \"name\": e.target.value\n        });\n    }\n\n    function handleCPF(e) {\n        setCpf(e.target.value);\n\n        setReserveSeats({\n            ...reserveSeats,\n            \"cpf\": e.target.value\n        });\n    }\n\n    function tryAgain() {\n        if (reserveSeats.ids.length === 0) {\n            alert(\"Selecione um assento para prosseguir!\");\n        } else if (nome.length === 0) {\n            alert(\"Digite o seu nome completo para prosseguir!\");\n        } else if (cpf.length !== 11) {\n            alert(\"Digite um CPF válido com 11 números!\");\n        }\n    }\n\n    function confirmation() {\n        confirmSend(reserveSeats, idSection, '');\n        axios.post(`https://mock-api.driven.com.br/api/v4/cineflex/seats/book-many`, reserveSeats);\n    }\n\n    const isFilled = reserveSeats.ids.length !== 0 && nome.length !== 0 && !(cpf.length != 11);\n\n    return (\n        <main className=\"seat-selection-page\">\n            <div className=\"title-page\">\n                <span className=\"title\">Selecione o(s) assento(s)</span>\n            </div>\n            <div className=\"seats\">\n                <div className=\"seats-to-choose\">\n                    {sectionDetails.seats.map(seat => (\n                        (seat.isAvailable === true\n                            ? <Seat classSeat=\"circle available\" name={seat.name} id={seat.id} handle={handleSeat} />\n                            : <Seat classSeat=\"circle unavailable\" name={seat.name} />\n                        )\n                    ))}\n\n                </div>\n                <div className=\"seat-subtitle\">\n                    <div className=\"selected\">\n                        <div className=\"circle selected\"></div>\n                        Selecionado\n                    </div>\n                    <div className=\"available\">\n                        <div className=\"circle available\"></div>\n                        Disponível\n                    </div>\n                    <div className=\"unavailable\">\n                        <div className=\"circle unavailable\"></div>\n                        Indisponível\n                    </div>\n\n                </div>\n            </div>\n\n            <div className=\"buyer-info\">\n                <div className=\"buyer-name\">\n                    <span className=\"name\">\n                        Nome do comprador:\n                    </span>\n                    <input type=\"text\" className=\"input-name\" placeholder='Digite seu nome...' onChange={handleName} value={nome} />\n                </div>\n                <div className=\"buyer-cpf\">\n                    <span className=\"cpf\">\n                        CPF do comprador:\n                    </span>\n                    <input type=\"text\" className=\"input-cpf\" placeholder='Digite seu CPF...' onChange={handleCPF} value={cpf} />\n                </div>\n            </div>\n\n            {isFilled === true\n                ? <Link to=\"/receipt\">\n                    <Button isFilled={isFilled} onClick={() => confirmation()}>\n                        Reservar assento(s)\n                    </Button>\n                </Link>\n                : <Link to=\"#\">\n                    <Button isFilled={isFilled} onClick={() => tryAgain()}>\n                        Reservar assento(s)\n                    </Button>\n                </Link>\n            }\n\n            <Footer\n                src={movie.posterURL}\n                alt={movie.title}\n                title={movie.title}\n                weekday={day.weekday}\n                time={name}\n            />\n        </main>\n    );\n}\n\nconst Button = styled.button`\n    width: 225px;\n    height: 42px;\n\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 21px;\n    letter-spacing: 0.04em;\n    color: #fff;\n\n    border-radius: 3px;\n    background-color: #e8833a;\n\n    margin: auto;\n    margin-top: 35px;\n\n    cursor: ${({ isFilled }) => isFilled ? 'pointer' : 'not-allowed'};\n    opacity: ${({ isFilled }) => isFilled ? '1' : '0.6'};\n`","import axios from \"axios\";\nimport Footer from \"./Footer\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport loading from \"../assets/loading.svg\";\n\nexport default function SectionSelection() {\n    const [movie, setMovie] = useState([]);\n    const { idMovie } = useParams();\n\n    let { days } = movie;\n\n    useEffect(() => {\n        const promise = axios.get(`https://mock-api.driven.com.br/api/v4/cineflex/movies/${idMovie}/showtimes`);\n\n        promise.then(response => {\n            setMovie(response.data);\n        });\n    }, [idMovie]);\n\n    if (movie.length === 0) {\n        return (\n            <>\n                <img src={loading} />\n                <h1>Carregando...</h1>\n            </>\n        );\n    }\n\n    return (\n        <main className=\"time-selection-page\">\n            <div className=\"title-page\">\n                <span className=\"title\">Selecione o horário</span>\n            </div>\n            <div className=\"content\">\n                <div className=\"container\">\n                    {days.map(section => (\n                        <div className=\"date\">\n                            <h1>{section.weekday} - {section.date}</h1>\n\n                            <div className=\"hours\">\n                                {section.showtimes.map(section =>\n                                    <Link to={`/seats/${section.id}`}>\n                                        <span className=\"hours-box\">{section.name}</span>\n                                    </Link>\n                                )}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            <Footer\n                src={movie.posterURL}\n                alt={movie.title}\n                title={movie.title}\n            />\n        </main>\n    );\n}\n","import { useState } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport MovieSelection from './MovieSelection';\nimport ReceiptPage from './ReceiptPage';\nimport SeatSelection from './SeatSelection';\nimport SectionSelection from './SectionSelection';\n\nexport default function App() {\n\n    const [movieDetails, setMovieDetails] = useState({});\n\n    function updateMovieDetails(currentDetails, sectionId, details) {\n        setMovieDetails(details = { ...currentDetails, sectionId });\n    }\n\n    return (\n        <BrowserRouter>\n            <Header />\n            <Routes>\n                <Route path=\"/\" element={<MovieSelection />}></Route>\n                <Route path=\"/sections/:idMovie\" element={<SectionSelection />}></Route>\n                <Route path=\"/seats/:idSection\" element={<SeatSelection confirmSend={updateMovieDetails} />}></Route>\n                <Route path=\"/receipt\" element={<ReceiptPage confirmSend={movieDetails} />}></Route>\n            </Routes>\n        </BrowserRouter>\n    )\n}\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./components/App\";\n\nimport \"./assets/css/reset.css\";\nimport \"./assets/css/style.css\";\n\nconst index = document.querySelector(\".root\");\nReactDOM.render(<App />, index);"],"sourceRoot":""}